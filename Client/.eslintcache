[{"/home/bes/react/typescript/robotfriends/Client/src/index.tsx":"1","/home/bes/react/typescript/robotfriends/Client/src/redux/store.ts":"2","/home/bes/react/typescript/robotfriends/Client/src/components/App.tsx":"3","/home/bes/react/typescript/robotfriends/Client/src/redux/rootReducer.ts":"4","/home/bes/react/typescript/robotfriends/Client/src/redux/robots/robotActions.ts":"5","/home/bes/react/typescript/robotfriends/Client/src/pages/MainPage.tsx":"6","/home/bes/react/typescript/robotfriends/Client/src/pages/RobotDetail.tsx":"7","/home/bes/react/typescript/robotfriends/Client/src/Layout/index.tsx":"8","/home/bes/react/typescript/robotfriends/Client/src/redux/ui/uiReducers.ts":"9","/home/bes/react/typescript/robotfriends/Client/src/redux/robots/robotsReducer.ts":"10","/home/bes/react/typescript/robotfriends/Client/src/redux/robots/robotType.ts":"11","/home/bes/react/typescript/robotfriends/Client/src/components/SearchBox.tsx":"12","/home/bes/react/typescript/robotfriends/Client/src/components/CardList.tsx":"13","/home/bes/react/typescript/robotfriends/Client/src/Layout/Header.tsx":"14","/home/bes/react/typescript/robotfriends/Client/src/Layout/Tab.tsx":"15","/home/bes/react/typescript/robotfriends/Client/src/Layout/SideDrawer.tsx":"16","/home/bes/react/typescript/robotfriends/Client/src/redux/ui/uiTypes.ts":"17","/home/bes/react/typescript/robotfriends/Client/src/redux/ui/uiActions.ts":"18","/home/bes/react/typescript/robotfriends/Client/src/components/MaterialCard.tsx":"19","/home/bes/react/typescript/robotfriends/Client/src/Layout/Theme.tsx":"20","/home/bes/react/typescript/robotfriends/Client/src/redux/robots/robotSelector.ts":"21"},{"size":444,"mtime":1610035689224,"results":"22","hashOfConfig":"23"},{"size":1472,"mtime":1610023313363,"results":"24","hashOfConfig":"23"},{"size":800,"mtime":1610004265206,"results":"25","hashOfConfig":"23"},{"size":509,"mtime":1610022821974,"results":"26","hashOfConfig":"23"},{"size":1141,"mtime":1610023434501,"results":"27","hashOfConfig":"23"},{"size":699,"mtime":1610035867922,"results":"28","hashOfConfig":"23"},{"size":3537,"mtime":1610010438172,"results":"29","hashOfConfig":"23"},{"size":486,"mtime":1610036126551,"results":"30","hashOfConfig":"23"},{"size":463,"mtime":1609999925857,"results":"31","hashOfConfig":"23"},{"size":553,"mtime":1610034136138,"results":"32","hashOfConfig":"23"},{"size":178,"mtime":1610022738855,"results":"33","hashOfConfig":"23"},{"size":900,"mtime":1610034759744,"results":"34","hashOfConfig":"23"},{"size":1152,"mtime":1610034230364,"results":"35","hashOfConfig":"23"},{"size":1574,"mtime":1610034393324,"results":"36","hashOfConfig":"23"},{"size":1254,"mtime":1610014517972,"results":"37","hashOfConfig":"23"},{"size":2292,"mtime":1610006955829,"results":"38","hashOfConfig":"23"},{"size":101,"mtime":1609999845659,"results":"39","hashOfConfig":"23"},{"size":550,"mtime":1609999869258,"results":"40","hashOfConfig":"23"},{"size":1036,"mtime":1609998284673,"results":"41","hashOfConfig":"23"},{"size":731,"mtime":1610010214707,"results":"42","hashOfConfig":"23"},{"size":436,"mtime":1610034196469,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"gn08n3",{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/bes/react/typescript/robotfriends/Client/src/index.tsx",[],"/home/bes/react/typescript/robotfriends/Client/src/redux/store.ts",[],["90","91"],"/home/bes/react/typescript/robotfriends/Client/src/components/App.tsx",[],"/home/bes/react/typescript/robotfriends/Client/src/redux/rootReducer.ts",[],"/home/bes/react/typescript/robotfriends/Client/src/redux/robots/robotActions.ts",[],"/home/bes/react/typescript/robotfriends/Client/src/pages/MainPage.tsx",[],"/home/bes/react/typescript/robotfriends/Client/src/pages/RobotDetail.tsx",["92","93"],"import React, { useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { IAppState } from \"../redux/rootReducer\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getRobot } from \"../redux/robots/robotActions\";\nimport {\n  Card,\n  CardActionArea,\n  CardMedia,\n  makeStyles,\n  Container,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemAvatar,\n  Avatar,\n} from \"@material-ui/core\";\n\nimport { useTheme } from \"@material-ui/core/styles\";\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport FingerPrintIcon from \"@material-ui/icons/Fingerprint\";\nimport EmailIcon from \"@material-ui/icons/Email\";\nimport PhoneIcon from \"@material-ui/icons/Phone\";\nimport WebsiteIcon from \"@material-ui/icons/Public\";\n\nconst RobotDetail: React.FC<any> = () => {\n  const { id } = useParams<{ id: string }>();\n  const classes = useStyles();\n\n  const dispatch = useDispatch();\n  const robot = useSelector((state: IAppState) => state.robots.robot);\n\n  const theme = useTheme();\n\n  useEffect(() => {\n    const fetchData = async (id: string) => {\n      await dispatch(getRobot(id));\n    };\n\n    fetchData(id);\n  }, []);\n\n  return (\n    <Container className={classes.container}>\n      <Card className={classes.group} elevation={3}>\n        <Card elevation={3}>\n          <CardActionArea>\n            <CardMedia\n              component=\"img\"\n              alt=\"Robo hash api\"\n              image={`https://robohash.org/${robot.id}?size=250x250`}\n              title={robot.name}\n            />\n          </CardActionArea>\n        </Card>\n\n        <List className={classes.list}>\n          <ListItem>\n            <ListItemAvatar>\n              <Avatar>\n                <PersonIcon />\n              </Avatar>\n            </ListItemAvatar>\n            <ListItemText primary=\"Name\" secondary={robot.name} />\n          </ListItem>\n\n          <ListItem>\n            <ListItemAvatar>\n              <Avatar>\n                <FingerPrintIcon />\n              </Avatar>\n            </ListItemAvatar>\n            <ListItemText primary=\"Username\" secondary={robot.username} />\n          </ListItem>\n\n          <ListItem>\n            <ListItemAvatar>\n              <Avatar>\n                <EmailIcon />\n              </Avatar>\n            </ListItemAvatar>\n            <ListItemText primary=\"Email\" secondary={robot.email} />\n          </ListItem>\n\n          <ListItem>\n            <ListItemAvatar>\n              <Avatar>\n                <PhoneIcon />\n              </Avatar>\n            </ListItemAvatar>\n            <ListItemText primary=\"Phone\" secondary={robot.phone} />\n          </ListItem>\n\n          <ListItem>\n            <ListItemAvatar>\n              <Avatar>\n                <WebsiteIcon />\n              </Avatar>\n            </ListItemAvatar>\n            <ListItemText primary=\"Website\" secondary={robot.website} />\n          </ListItem>\n        </List>\n      </Card>\n    </Container>\n  );\n};\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: \"flex\",\n    justifyContent: \"space-evenly\",\n    alignItems: \"center\",\n    height: \"100vh\",\n    [theme.breakpoints.down(\"sm\")]: {\n      flexDirection: \"column\",\n      margin: \"5% 0% 15% 0%\",\n    },\n  },\n  group: {\n    display: \"flex\",\n    justifyContent: \"space-evenly\",\n    alignItems: \"center\",\n    width: \"70%\",\n    [theme.breakpoints.down(\"sm\")]: {\n      flexDirection: \"column\",\n      width: \"100%\",\n    },\n  },\n  list: {\n    width: \"100%\",\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nexport default RobotDetail;\n","/home/bes/react/typescript/robotfriends/Client/src/Layout/index.tsx",["94"],"/home/bes/react/typescript/robotfriends/Client/src/redux/ui/uiReducers.ts",["95","96"],"import * as uiTypes from \"./uiTypes\";\n\nconst initialState = { isSideDrawerOpen: false, isDarkTheme: false };\n\nexport default (state = initialState, actions: any) => {\n  const { type, payload } = actions;\n\n  switch (type) {\n    case uiTypes.TOGGLE_SIDE_DRAWER:\n      return { ...state, isSideDrawerOpen: !state.isSideDrawerOpen };\n\n    case uiTypes.TOGGLE_THEME:\n      return { ...state, isDarkTheme: !state.isDarkTheme };\n\n    default:\n      return state;\n  }\n};\n","/home/bes/react/typescript/robotfriends/Client/src/redux/robots/robotsReducer.ts",["97"],"/home/bes/react/typescript/robotfriends/Client/src/redux/robots/robotType.ts",[],"/home/bes/react/typescript/robotfriends/Client/src/components/SearchBox.tsx",["98"],"/home/bes/react/typescript/robotfriends/Client/src/components/CardList.tsx",["99"],"/home/bes/react/typescript/robotfriends/Client/src/Layout/Header.tsx",[],"/home/bes/react/typescript/robotfriends/Client/src/Layout/Tab.tsx",[],"/home/bes/react/typescript/robotfriends/Client/src/Layout/SideDrawer.tsx",[],"/home/bes/react/typescript/robotfriends/Client/src/redux/ui/uiTypes.ts",[],"/home/bes/react/typescript/robotfriends/Client/src/redux/ui/uiActions.ts",[],"/home/bes/react/typescript/robotfriends/Client/src/components/MaterialCard.tsx",["100"],"import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Card, CardActionArea, CardContent, CardMedia, Typography } from \"@material-ui/core\";\n\ntype MaterialCard = {\n  name: string;\n  id: number;\n};\n\nconst MaterialCard: React.FC<MaterialCard> = ({ name, id }) => {\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.root} elevation={3}>\n      <CardActionArea>\n        <CardMedia\n          className={classes.cardImage}\n          component=\"img\"\n          alt=\"Robo hash api\"\n          height=\"250\"\n          image={`https://robohash.org/${id}?size=250x250`}\n          title={name}\n        />\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\" style={{ textAlign: \"center\" }}>\n            {name}\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n    </Card>\n  );\n};\n\nexport default MaterialCard;\n\nconst useStyles = makeStyles({\n  root: {\n    width: 300,\n    margin: \"10px 10px\",\n  },\n  cardImage: {\n    height: \"auto\",\n  },\n});\n","/home/bes/react/typescript/robotfriends/Client/src/Layout/Theme.tsx",[],"/home/bes/react/typescript/robotfriends/Client/src/redux/robots/robotSelector.ts",[],{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","severity":1,"message":"106","line":34,"column":9,"nodeType":"107","messageId":"108","endLine":34,"endColumn":14},{"ruleId":"109","severity":1,"message":"110","line":42,"column":6,"nodeType":"111","endLine":42,"endColumn":8,"suggestions":"112"},{"ruleId":"105","severity":1,"message":"113","line":8,"column":6,"nodeType":"107","messageId":"108","endLine":8,"endColumn":9},{"ruleId":"114","severity":1,"message":"115","line":5,"column":1,"nodeType":"116","endLine":18,"endColumn":3},{"ruleId":"105","severity":1,"message":"117","line":6,"column":17,"nodeType":"107","messageId":"108","endLine":6,"endColumn":24},{"ruleId":"114","severity":1,"message":"115","line":5,"column":1,"nodeType":"116","endLine":24,"endColumn":3},{"ruleId":"105","severity":1,"message":"106","line":10,"column":9,"nodeType":"107","messageId":"108","endLine":10,"endColumn":14},{"ruleId":"109","severity":1,"message":"118","line":17,"column":6,"nodeType":"111","endLine":17,"endColumn":14,"suggestions":"119"},{"ruleId":"120","severity":1,"message":"121","line":10,"column":7,"nodeType":"107","messageId":"122","endLine":10,"endColumn":43},"no-native-reassign",["123"],"no-negated-in-lhs",["124"],"@typescript-eslint/no-unused-vars","'theme' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'id'. Either include them or remove the dependency array.","ArrayExpression",["125"],"'Nav' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'payload' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'cardComponent'. Either include it or remove the dependency array.",["126"],"@typescript-eslint/no-redeclare","'MaterialCard' is already defined.","redeclared","no-global-assign","no-unsafe-negation",{"desc":"127","fix":"128"},{"desc":"129","fix":"130"},"Update the dependencies array to be: [dispatch, id]",{"range":"131","text":"132"},"Update the dependencies array to be: [cardComponent, robots]",{"range":"133","text":"134"},[1131,1133],"[dispatch, id]",[579,587],"[cardComponent, robots]"]