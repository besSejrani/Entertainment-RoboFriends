[{"/home/bes/react/typescript/robotfriends/Client/src/index.tsx":"1","/home/bes/react/typescript/robotfriends/Client/src/components/App.tsx":"2","/home/bes/react/typescript/robotfriends/Client/src/redux/reducers/index.ts":"3","/home/bes/react/typescript/robotfriends/Client/src/pages/MainPage.tsx":"4","/home/bes/react/typescript/robotfriends/Client/src/Layout/index.tsx":"5","/home/bes/react/typescript/robotfriends/Client/src/pages/RobotDetail.tsx":"6","/home/bes/react/typescript/robotfriends/Client/src/redux/reducers/robots.ts":"7","/home/bes/react/typescript/robotfriends/Client/src/redux/reducers/search.ts":"8","/home/bes/react/typescript/robotfriends/Client/src/redux/actions/index.ts":"9","/home/bes/react/typescript/robotfriends/Client/src/Layout/Theme.ts":"10","/home/bes/react/typescript/robotfriends/Client/src/Layout/Header.tsx":"11","/home/bes/react/typescript/robotfriends/Client/src/components/SearchBox.tsx":"12","/home/bes/react/typescript/robotfriends/Client/src/components/CardList.tsx":"13","/home/bes/react/typescript/robotfriends/Client/src/Layout/Tab.tsx":"14","/home/bes/react/typescript/robotfriends/Client/src/redux/actions/robotType.ts":"15","/home/bes/react/typescript/robotfriends/Client/src/components/MaterialCard.tsx":"16","/home/bes/react/typescript/robotfriends/Client/src/Layout/SideDrawer.tsx":"17","/home/bes/react/typescript/robotfriends/Client/src/redux/ui/uiReducers.ts":"18","/home/bes/react/typescript/robotfriends/Client/src/redux/ui/uiTypes.ts":"19","/home/bes/react/typescript/robotfriends/Client/src/redux/ui/uiActions.ts":"20"},{"size":712,"mtime":1609596305845,"results":"21","hashOfConfig":"22"},{"size":782,"mtime":1609720153931,"results":"23","hashOfConfig":"22"},{"size":330,"mtime":1609908850745,"results":"24","hashOfConfig":"22"},{"size":401,"mtime":1609721669907,"results":"25","hashOfConfig":"22"},{"size":501,"mtime":1609908379948,"results":"26","hashOfConfig":"22"},{"size":3543,"mtime":1609904056943,"results":"27","hashOfConfig":"22"},{"size":422,"mtime":1609717800551,"results":"28","hashOfConfig":"22"},{"size":348,"mtime":1609628741250,"results":"29","hashOfConfig":"22"},{"size":1121,"mtime":1609720931458,"results":"30","hashOfConfig":"22"},{"size":212,"mtime":1609639339176,"results":"31","hashOfConfig":"22"},{"size":1526,"mtime":1609909072442,"results":"32","hashOfConfig":"22"},{"size":847,"mtime":1609898273153,"results":"33","hashOfConfig":"22"},{"size":1388,"mtime":1609898273153,"results":"34","hashOfConfig":"22"},{"size":1310,"mtime":1609898273153,"results":"35","hashOfConfig":"22"},{"size":138,"mtime":1609717151804,"results":"36","hashOfConfig":"22"},{"size":939,"mtime":1609898273153,"results":"37","hashOfConfig":"22"},{"size":2665,"mtime":1609909882208,"results":"38","hashOfConfig":"22"},{"size":351,"mtime":1609908751379,"results":"39","hashOfConfig":"22"},{"size":56,"mtime":1609908520950,"results":"40","hashOfConfig":"22"},{"size":354,"mtime":1609908959632,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"gn08n3",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"/home/bes/react/typescript/robotfriends/Client/src/index.tsx",[],["88","89"],"/home/bes/react/typescript/robotfriends/Client/src/components/App.tsx",[],"/home/bes/react/typescript/robotfriends/Client/src/redux/reducers/index.ts",[],"/home/bes/react/typescript/robotfriends/Client/src/pages/MainPage.tsx",[],"/home/bes/react/typescript/robotfriends/Client/src/Layout/index.tsx",[],"/home/bes/react/typescript/robotfriends/Client/src/pages/RobotDetail.tsx",["90","91"],"import React, { useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { IAppState } from \"../redux/reducers\";\n\nimport { connect } from \"react-redux\";\nimport { getRobot } from \"../redux/actions/index\";\nimport {\n  Card,\n  CardActionArea,\n  CardMedia,\n  makeStyles,\n  Container,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemAvatar,\n  Avatar,\n  Paper,\n} from \"@material-ui/core\";\n\nimport { theme } from \"../Layout/Theme\";\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport FingerPrintIcon from \"@material-ui/icons/Fingerprint\";\nimport EmailIcon from \"@material-ui/icons/Email\";\nimport PhoneIcon from \"@material-ui/icons/Phone\";\nimport WebsiteIcon from \"@material-ui/icons/Public\";\n\nconst RobotDetail: React.FC<any> = ({ getRobot, robot }) => {\n  const { id } = useParams<{ id: string }>();\n  const classes = useStyles();\n\n  useEffect(() => {\n    const fetchData = async (id: string) => {\n      await getRobot(id);\n    };\n\n    fetchData(id);\n  }, []);\n\n  return (\n    <Container className={classes.container}>\n      <Card className={classes.group}>\n        <Card className={classes.root}>\n          <CardActionArea>\n            <CardMedia\n              component=\"img\"\n              alt=\"Robo hash api\"\n              height=\"250\"\n              image={`https://robohash.org/${robot.id}?size=250x250`}\n              title={robot.name}\n            />\n          </CardActionArea>\n        </Card>\n\n        <List className={classes.list}>\n          <ListItem>\n            <ListItemAvatar>\n              <Avatar>\n                <PersonIcon />\n              </Avatar>\n            </ListItemAvatar>\n            <ListItemText primary=\"Name\" secondary={robot.name} />\n          </ListItem>\n\n          <ListItem>\n            <ListItemAvatar>\n              <Avatar>\n                <FingerPrintIcon />\n              </Avatar>\n            </ListItemAvatar>\n            <ListItemText primary=\"Username\" secondary={robot.username} />\n          </ListItem>\n\n          <ListItem>\n            <ListItemAvatar>\n              <Avatar>\n                <EmailIcon />\n              </Avatar>\n            </ListItemAvatar>\n            <ListItemText primary=\"Email\" secondary={robot.email} />\n          </ListItem>\n\n          <ListItem>\n            <ListItemAvatar>\n              <Avatar>\n                <PhoneIcon />\n              </Avatar>\n            </ListItemAvatar>\n            <ListItemText primary=\"Phone\" secondary={robot.phone} />\n          </ListItem>\n\n          <ListItem>\n            <ListItemAvatar>\n              <Avatar>\n                <WebsiteIcon />\n              </Avatar>\n            </ListItemAvatar>\n            <ListItemText primary=\"Website\" secondary={robot.website} />\n          </ListItem>\n        </List>\n      </Card>\n    </Container>\n  );\n};\n\nconst useStyles = makeStyles({\n  container: {\n    display: \"flex\",\n    justifyContent: \"space-evenly\",\n    alignItems: \"center\",\n    height: \"100vh\",\n    [theme.breakpoints.down(\"sm\")]: {\n      flexDirection: \"column\",\n      margin: \"25% 0%\",\n    },\n  },\n  group: {\n    display: \"flex\",\n    justifyContent: \"space-evenly\",\n    alignItems: \"center\",\n    width: \"70%\",\n    [theme.breakpoints.down(\"sm\")]: {\n      flexDirection: \"column\",\n      width: \"100%\",\n    },\n  },\n  root: {\n    width: 300,\n  },\n  list: {\n    width: \"100%\",\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper,\n  },\n});\n\nconst mapState = (state: IAppState) => {\n  return {\n    robot: state.robots.robot,\n  };\n};\n\nexport default connect(mapState, { getRobot })(RobotDetail);\n","/home/bes/react/typescript/robotfriends/Client/src/redux/reducers/robots.ts",["92"],"import * as robotType from \"../actions/robotType\";\r\n\r\nconst initialState = { robots: [], robot: {} };\r\n\r\nexport default (state = initialState, actions: any) => {\r\n  const { type, payload } = actions;\r\n\r\n  switch (type) {\r\n    case robotType.GET_ROBOTS:\r\n      return { ...state, robots: payload };\r\n\r\n    case robotType.GET_ROBOT:\r\n      return { ...state, robot: payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","/home/bes/react/typescript/robotfriends/Client/src/redux/reducers/search.ts",["93"],"import * as robotType from \"../actions/robotType\";\r\n\r\nconst initialState = {\r\n  search: \"\",\r\n};\r\n\r\nexport default (state = initialState, actions: any) => {\r\n  const { type, payload } = actions;\r\n\r\n  switch (type) {\r\n    case robotType.CHANGE_SEARCH_FIELD:\r\n      return { ...state, search: payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","/home/bes/react/typescript/robotfriends/Client/src/redux/actions/index.ts",[],"/home/bes/react/typescript/robotfriends/Client/src/Layout/Theme.ts",[],"/home/bes/react/typescript/robotfriends/Client/src/Layout/Header.tsx",[],"/home/bes/react/typescript/robotfriends/Client/src/components/SearchBox.tsx",[],"/home/bes/react/typescript/robotfriends/Client/src/components/CardList.tsx",[],"/home/bes/react/typescript/robotfriends/Client/src/Layout/Tab.tsx",[],"/home/bes/react/typescript/robotfriends/Client/src/redux/actions/robotType.ts",[],"/home/bes/react/typescript/robotfriends/Client/src/components/MaterialCard.tsx",["94"],"import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Card, CardActionArea, CardContent, CardMedia, Typography} from \"@material-ui/core\";\n\ntype MaterialCard = {\n  name: string;\n  id: number;\n};\n\nconst MaterialCard: React.FC<MaterialCard> = ({ name, id }) => {\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.root}>\n      <CardActionArea>\n        <CardMedia\n          component=\"img\"\n          alt=\"Robo hash api\"\n          height=\"250\"\n          image={`https://robohash.org/${id}?size=250x250`}\n          title={name}\n        />\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\" style={{textAlign: \"center\"}}>\n            {name}\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n    </Card>\n  );\n};\n\nexport default MaterialCard;\n\nconst useStyles = makeStyles({\n  root: {\n    width: 300,\n    margin: \"10px 10px\",\n  },\n});\n","/home/bes/react/typescript/robotfriends/Client/src/Layout/SideDrawer.tsx",[],"/home/bes/react/typescript/robotfriends/Client/src/redux/ui/uiReducers.ts",["95","96"],"import * as uiTypes from \"./uiTypes\";\n\nconst initialState = { isSideDrawerOpen: false };\n\nexport default (state = initialState, actions: any) => {\n  const { type, payload } = actions;\n\n  switch (type) {\n    case uiTypes.TOGGLE_SIDE_DRAWER:\n      return { ...state, isSideDrawerOpen: !state.isSideDrawerOpen };\n\n    default:\n      return state;\n  }\n};\n","/home/bes/react/typescript/robotfriends/Client/src/redux/ui/uiTypes.ts",[],"/home/bes/react/typescript/robotfriends/Client/src/redux/ui/uiActions.ts",[],{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","severity":1,"message":"102","line":18,"column":3,"nodeType":"103","messageId":"104","endLine":18,"endColumn":8},{"ruleId":"105","severity":1,"message":"106","line":38,"column":6,"nodeType":"107","endLine":38,"endColumn":8,"suggestions":"108"},{"ruleId":"109","severity":1,"message":"110","line":5,"column":1,"nodeType":"111","endLine":18,"endColumn":3},{"ruleId":"109","severity":1,"message":"110","line":7,"column":1,"nodeType":"111","endLine":17,"endColumn":3},{"ruleId":"112","severity":1,"message":"113","line":10,"column":7,"nodeType":"103","messageId":"114","endLine":10,"endColumn":43},{"ruleId":"109","severity":1,"message":"110","line":5,"column":1,"nodeType":"111","endLine":15,"endColumn":3},{"ruleId":"101","severity":1,"message":"115","line":6,"column":17,"nodeType":"103","messageId":"104","endLine":6,"endColumn":24},"no-native-reassign",["116"],"no-negated-in-lhs",["117"],"@typescript-eslint/no-unused-vars","'Paper' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getRobot' and 'id'. Either include them or remove the dependency array. If 'getRobot' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["118"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","@typescript-eslint/no-redeclare","'MaterialCard' is already defined.","redeclared","'payload' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"119","fix":"120"},"Update the dependencies array to be: [getRobot, id]",{"range":"121","text":"122"},[976,978],"[getRobot, id]"]